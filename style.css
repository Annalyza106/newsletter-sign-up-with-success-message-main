@font-face {
    font-family: 'Roboto';
    src: 
        local('Roboto Regular'),
        url('/assets/fonts/Roboto-Regular.ttf');
    font-weight: 400;
}

@font-face {
    font-family: 'Roboto';
    src: 
        local('Roboto Bold'),
        url('/assets/fonts/Roboto-Bold.ttf');
    font-weight: 700;
}



:root {
    --clr-primary-400: hsl(4, 100%, 67%);
    --clr-primary-500: hsl(347, 100%, 58%);

    --clr-neutral-100: hsl(0, 0%, 100%);
    --clr-neutral-200: hsl(231, 7%, 60%);
    --clr-neutral-700: hsl(235, 18%, 26%);
    --clr-neutral-800: hsl(234, 29%, 20%);

    --ff-base: 'Roboto', sans-serif;
    --fw-regular: 400;
    --fw-bold: 700;

    --fs-300: .825rem;
    --fs-400: 1rem;
    --fs-900: 2.5rem;     
}

/* 1. Use a more-intuitive box-sizing model */
*, *::before, *::after {
    box-sizing: border-box;
  }
  
  /* 2. Remove default margin */
  * {
    margin: 0;
  }
  
  body {
    /* 3. Add accessible line-height */
    line-height: 1.5;
    /* 4. Improve text rendering */
    -webkit-font-smoothing: antialiased;
  }
  
  /* 5. Improve media defaults */
  img, picture, video, canvas, svg {
    display: block;
    max-width: 100%;
  }
  
  /* 6. Inherit fonts for form controls */
  input, button, textarea, select {
    font: inherit;
  }
  
  /* 7. Avoid text overflows */
  p, h1, h2, h3, h4, h5, h6 {
    overflow-wrap: break-word;
  }
  
  /* 8. Improve line wrapping */
  p {
    text-wrap: pretty;
  }
  h1, h2, h3, h4, h5, h6 {
    text-wrap: balance;
  }
  
  /*
    9. Create a root stacking context
  */
  #root, #__next {
    isolation: isolate;
  }

/* 
10. Remove list styles on ul, ol elements 
*/
  ul[role='list'],
  ol[role='list'] {
    list-style: none;
    margin: 0;
    padding: 0;
  }

body {
    font-family: var(--ff-base);
    font-size: var(--fs-400);
    font-weight: var(--fw-regular);
    color: var(--clr-neutral-800);
    line-height: 1.5;
    background-color: var(--clr-neutral-800);

    min-height: 100vh;
    display: grid;
    place-content: center;

}

input {
    padding: 1rem;
    border-radius: .5rem;
    font: inherit;
    font-size: var(--fs-400);
    font-weight: var(--fw-regular);
    border: 1px solid var(--clr-neutral-200);
}

input:focus-visible {
    outline: 2px solid black;
}

input::placeholder{
    color: var(--clr-neutral-200);
}

input:not(:focus):invalid {
    background: rgb(254, 233, 233);
    color: var(--clr-primary-400);
    border: 1px solid var(--clr-primary-400);
}

.form-group {
    display: grid;
    gap: .5rem;
    font-size: var(--fs-300);
    font-weight: var(--fw-bold);
}

.form-group.with-error-field {
    grid-template-columns: 1fr 1fr;
}

.form-group > .error-message {
    text-align: end;
    color: var(--clr-primary-400);
    display: none;
}
.form-group:has(:not(:focus):invalid) > .error-message {
    display: block;
}

.form-group.with-error-field > input {
    grid-column: 1 / -1;
}

button {
    background: var(--clr-neutral-800);
    color: var(--clr-neutral-100);
    font: inherit;
    font-weight: var(--fw-bold);
    border: 0;
    padding: 1rem;
    border-radius: 0.5rem;
    z-index: 2;
}

button:hover,
button:focus-visible {
    position: relative;
    background:  linear-gradient(-90deg,
        var(--clr-primary-400),
        var(--clr-primary-500)
    );
    outline: none;
}

button:hover::after,
button:focus-visible::after {
    content: '';
    position: absolute;
    z-index: -1;
    inset: 0;
    background: inherit;
    border-radius: inherit;
    translate: 0 1.5rem;
    filter: blur(1rem);
    opacity: .25;
}

.newsletter-cta form {
    margin-block-start: 1.25rem;
    display: grid;
    gap: 1.5rem;
}

.newsletter-cta {
    background-color: var(--clr-neutral-100);
    border-radius: 1rem;
    max-width: 850px;
}

@media (min-width: 650px) {
    .newsletter-cta {
        margin-inline: 1rem;
        align-items: center;
        display: grid;
        grid-template-columns: 1fr 0.75fr;
        padding: 2rem;
        border-radius: 1rem;
    }

    .newsletter-cta > .content {
        grid-column: 1;
        grid-row: 1;
    }

    .modal {
        width: min(450px, 50%);
        margin: auto;
        height: min(480px, 58%);
        border-radius: 1rem;
        padding: 3em;
        box-shadow: 15px 15px 15px 10px rgb(10, 8, 26);
    }
}

.newsletter-cta img {
    margin-inline: auto;
}

.newsletter-cta > .content {
    display: grid;
    gap: 1rem;
    padding: 1.5rem;
}

.newsletter-cta .title{
    font-size: var(--fs-900);
    font-weight: var(--fw-bold);
}

.checkmark-list {
    display: grid;
    gap: .625rem;
}

.checkmark-list li {
    display: grid;
    grid-template-columns: 2.5rem auto;
}

.checkmark-list li::before{
    content: url('assets/images/icon-list.svg');
}


.modal {
    background-color: var(--clr-neutral-100);
    padding: 2rem;
    position: fixed;
    inset: 0;
    z-index: 10;
    transition: all 0.3s ease-in-out;
    font: inherit;
    line-height: 1;
    
    display: grid;
    justify-content: center;
    align-items: center;
}

.modal-content {
    display: grid;
    gap: 2em;
}

.modal h2 {
    font-size: var(--fs-900);
    font-weight: var(--fw-bold);
}

.modal p {
    font-size: var(--fs-400);
    font-weight: var(--fw-regular);
}

.modal span {
    font-weight: var(--fw-bold);
}

.hidden {
    display: none;
}
